# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- azure-piplines

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: DotNet Restore
  inputs:
    command: 'restore'
    projects: './astro-world-api/astro-world-api.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: DotNet Build
  inputs:
    command: 'build'
    projects: './astro-world-api/astro-world-api.csproj'
    arguments: '--configuration $(buildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: DotNet Publish
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
    
- task: AzureRmWebAppDeployment@4
  displayName: Azure Web App Deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(b280efef-1f54-4ab4-9cd9-ed512f576405)'
    appType: 'webAppLinux'
    WebAppName: 'astroblue-world'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    RuntimeStack: 'DOTNETCORE|5.0'
    AppSettings: '-Scope $(Scope) -GrantType $(GrantType) -ConnectionStrings__AstroWorldDbContext $(AstroWorldDbContext) -ClientSecret $(ClientSecret) -AzureStorageConfig__FileShareUri $(FileShareUri) -AzureStorageConfig__AccountName $(AccountName) -AzureStorageConfig__AccountKey $(AccountKey) -AzureAd__TenantId $(TenantId) -AzureAd__Instance $(Instance) -AzureAd__ClientId $(ClientId) -ApiKey $(ApiKey)'